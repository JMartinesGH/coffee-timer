{"version":3,"sources":["contexts/theme.js","components/Recipe.js","components/Home.js","components/Nav.js","components/AddRecipe.js","components/Timer.js","components/ActiveRecipe.js","index.js"],"names":["React","createContext","Consumer","Provider","ThemeConsumer","ThemeProvider","RecipeList","recipes","className","map","recipe","RecipeCard","name","theme","to","pathname","search","vessel","coffeeWeight","waterWeight","brewTimeMinutes","brewTimeSeconds","Popular","state","window","localStorage","getItem","JSON","parse","this","setState","toggleTheme","style","fontSize","onClick","Component","Nav","exact","SelectOption","props","min","max","label","value","onChange","selectWrapper","i","push","htmlFor","id","item","Recipe","bloom","handleSubmit","event","preventDefault","storage","existing","setItem","stringify","alert","handleChange","target","onSubmit","type","placeholder","autoComplete","disabled","Timer","totalMinutes","totalSeconds","elapsedTime","isRunning","startCounting","myInterval","setInterval","countUp","pauseCounting","clearInterval","minutes","Math","floor","console","log","cdmTimer","seconds","ActiveRecipe","queryString","location","parseInt","App","path","component","Home","AddRecipe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6281c972.chunk.js","sourcesContent":["import React from 'react'\n\nconst { Consumer, Provider } = React.createContext()\n\nexport const ThemeConsumer = Consumer\nexport const ThemeProvider = Provider","import React from 'react'\nimport { ThemeConsumer } from '../contexts/theme'\nimport { Link } from 'react-router-dom'\nimport '../styles/_variables.scss'\nimport '../styles/recipe.scss'\n\nexport function RecipeList({ recipes }) { \n  return (\n    <ul className='recipe-list'>\n      {recipes.map(recipe => (\n        <li key={recipe.name}><RecipeCard recipe={recipe}/></li>\n      ))}\n    </ul>\n  )\n}\n\n\nexport function RecipeCard({recipe}) { \n  return (\n    <ThemeConsumer>\n      {({ theme }) => (\n        <Link\n          className={`recipe-link`}\n          to={{\n            pathname: '/recipe/active',\n            search: `${recipe.vessel ? '?vessel=' + recipe.vessel : ''}${recipe.coffeeWeight ? '&coffeeWeight='+ recipe.coffeeWeight : '' }${recipe.waterWeight ? '&waterWeight='+ recipe.waterWeight : '' }${recipe.brewTimeMinutes ? '&minutes='+ recipe.brewTimeMinutes : '' }${recipe.brewTimeSeconds ? '&seconds='+ recipe.brewTimeSeconds : '' }`\n          }}\n        >\n          <div className={`recipe-card ${theme}-card`}>\n            <h2>{recipe.name}</h2>\n            <h4>{ `${recipe.vessel ? recipe.vessel : ''}` }</h4>\n            <h4>{`${recipe.brewTimeMinutes}:${recipe.brewTimeSeconds < 10 ? '0' + recipe.brewTimeSeconds : recipe.brewTimeSeconds} ${recipe.coffeeWeight ? ' | ' + recipe.coffeeWeight + 'g ' : ''}`}</h4>\n          </div>\n        </Link>\n      )}\n    </ThemeConsumer>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { RecipeList } from './Recipe'\nimport { ThemeConsumer } from '../contexts/theme'\nimport '../styles/_variables.scss'\nimport '../styles/_global.scss'\n\nexport default class Popular extends React.Component { \n  state = {\n    recipes: null,\n  }\n  componentDidMount() { \n    // get local storage\n    let storage = window.localStorage\n    // get existing data if it exists and convert to array\n    let recipes = storage.getItem('coffeeTimerRecipes')\n    recipes = recipes ? JSON.parse(recipes) : null\n    // set state\n    this.setState({\n      recipes\n    })\n  }\n  render() { \n    const { recipes } = this.state \n\n    return (\n      <ThemeConsumer>\n        {({ theme, toggleTheme }) => (\n          <div className='column'>\n            <div className='flex row space-between'>\n              <h1>Coffee Timer</h1>\n              <button\n                style={{ fontSize: 30 }}\n                className='btn-clear'\n                onClick={ toggleTheme }\n              >\n                { theme === 'light' ? '🔦' : '💡' }\n              </button>\n            </div>\n            {recipes && <RecipeList recipes={recipes} />}\n            {recipes == null && <h2>No Recipes</h2>}\n            <div className='fixed-btn'>\n              <Link className={`${theme}-btn add-btn`} to={{pathname: '/recipe/add'}}>Add Recipe +</Link>\n            </div>\n          </div>\n        )}\n      </ThemeConsumer>\n    )\n  }\n}\n","import React from 'react'\nimport { ThemeConsumer } from '../contexts/theme'\nimport { NavLink } from 'react-router-dom'\nimport '../styles/nav.scss'\n\nexport default function Nav() { \n  return (\n    <ThemeConsumer>\n      {({ theme, toggleTheme }) => (\n        <nav className='nav flex row space-between'>\n          <NavLink \n            to='/' \n            exact\n            className='nav-link center-vert'>\n            &laquo; Return Home\n          </NavLink>\n          \n          <button\n            style={{ fontSize: 30 }}\n            className='btn-clear'\n            onClick={ toggleTheme }\n          >\n            { theme === 'light' ? '🔦' : '💡' }\n          </button>\n        </nav>\n      )}\n    </ThemeConsumer>\n  )\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeConsumer } from '../contexts/theme'\nimport Nav from './Nav'\nimport '../styles/form.scss'\n\nclass SelectOption extends React.Component { \n  render() { \n    const { min, max, label, value, onChange } = this.props\n    let selectWrapper = []\n    \n    for (let i = min; i <= max; i++) { \n      selectWrapper.push(<option key={i} value={i}>{i}</option>)\n    }\n\n    return (\n      <div className='select-input'>      \n        <label htmlFor={`select-input-${label}`} className='recipe-label'>\n          { label }\n        </label>\n        <select id={`select-input-${label}`} name={value} onChange={onChange} >\n        { selectWrapper.map((item)=>item)}\n        </select>\n      </div>\n    )\n  }\n}\n\nSelectOption.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default class Recipe extends React.Component { \n  state = {\n    name: '',\n    vessel: '',\n    coffeeWeight: '',\n    waterWeight: '',\n    brewTimeMinutes: 0,\n    brewTimeSeconds: 0,\n    bloom: false\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    // get local storage\n    let storage = window.localStorage\n    // get existing data if it exists and convert to array\n    let existing = storage.getItem('coffeeTimerRecipes')\n    existing = existing ? JSON.parse(existing) : []\n    // push new recipe to array\n    existing.push(this.state)\n    // push back up to local storage\n    storage.setItem('coffeeTimerRecipes', JSON.stringify(existing))\n    // reset\n    this.setState({\n      name: '',\n      vessel: '',\n      coffeeWeight: '',\n      waterWeight: '',\n      brewTimeMinutes: 0,\n      brewTimeSeconds: 0,\n      bloom: false\n    })\n\n    window.alert('Recipe Added')\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  render() { \n    return (\n      <ThemeConsumer>\n        {({theme})=>(\n          <div className='column'>\n          <Nav />\n          <h1>Create a Recipe</h1>\n          <form className='recipe-form' onSubmit={this.handleSubmit}>\n            <div className='flex-center column recipe-inputs'>\n              <div className='flex row recipe-input space-between'>\n                <label htmlFor='username' className='recipe-label'>\n                  Nickname\n                </label>\n                <input\n                  type='text'\n                  id='name'\n                  name='name'\n                  className={`input-name`}\n                  placeholder='Recipe Name'\n                  autoComplete='off'\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                  />\n              </div>\n              <div className='flex row recipe-input space-between'>\n                <label htmlFor='username' className='recipe-label'>\n                  Vessel\n                </label>\n                <input\n                  type='text'\n                  id='vessel'\n                  name='vessel'\n                  className={`input-name`}\n                  placeholder='Vessel'\n                  autoComplete='off'\n                  value={this.state.vessel}\n                  onChange={this.handleChange}\n                  />\n              </div>\n              <div className='flex row recipe-input space-between'>\n                <label htmlFor='username' className='recipe-label'>\n                  Coffee Weight\n                </label>\n                <input\n                  type='text'\n                  id='coffeeWeight'\n                  name='coffeeWeight'\n                  className={`input-name`}\n                  placeholder='(grams)'\n                  autoComplete='off'\n                  value={this.state.coffeeWeight}\n                  onChange={this.handleChange}\n                  />\n              </div>\n              <div className='flex row recipe-input space-between'>\n                <label htmlFor='username' className='recipe-label'>\n                  Water Weight\n                </label>\n                <input\n                  type='text'\n                  id='waterWeight'\n                  name='waterWeight'\n                  className={`input-name`}\n                  placeholder='(grams)'\n                  autoComplete='off'\n                  value={this.state.waterWeight}\n                  onChange={this.handleChange}\n                  />\n              </div>\n                <div className='flex row recipe-input flex-center space-around'>\n                <SelectOption min={0} max={10} value=\"brewTimeMinutes\" label=\"Minutes\" onChange={this.handleChange} />\n                <SelectOption min={0} max={59} value=\"brewTimeSeconds\" label=\"Seconds\" onChange={this.handleChange}/>\n              </div>\n              <div className='fixed-btn'>\n                <button\n                    className={`${theme}-btn add-btn`}\n                    type='submit'\n                    disabled={\n                      !this.state.brewTimeMinutes ||\n                      !this.state.name\n                    }\n                    >\n                  Add Recipe +\n                </button>\n              </div>\n            </div>\n          </form>\n          </div>\n          )}\n        </ThemeConsumer>\n    )\n  }\n}\n","import React from 'react'\nimport '../styles/timer.scss'\n\nexport default class Timer extends React.Component {   \n  state = {\n    totalMinutes: 0,\n    totalSeconds: 0,\n    elapsedTime: 0,\n    isRunning: false\n  }\n  componentDidMount() { \n    this.cdmTimer = setInterval(() => { \n      this.setState({\n        totalMinutes: this.props.minutes ? this.props.minutes : 0,\n        totalSeconds: this.props.seconds ? this.props.seconds : 0\n      })\n      clearInterval(this.cdmTimer)\n    }, 250)\n  }\n  startCounting = () => {\n    this.myInterval = setInterval(this.countUp, 1000);\n\n    this.setState({\n      isRunning: true\n    })\n  }\n  pauseCounting = () => { \n    clearInterval(this.myInterval)\n    this.setState({\n      isRunning: false\n    })\n  }\n  countUp = ()=> {\n    this.setState(({ elapsedTime }) => ({ elapsedTime: elapsedTime + 1 }));\n    const { totalMinutes , totalSeconds , elapsedTime } = this.state\n    let minutes = Math.floor(elapsedTime / 60)\n    let seconds = elapsedTime - (minutes * 60)\n\n    if (minutes === totalMinutes && seconds === totalSeconds) { \n      console.log('match made in heaven')\n      this.pauseCounting()\n    }\n  }\n  componentWillUnmount() { \n    this.setState({\n      isRunning: false\n    })\n    clearInterval(this.myInterval)\n    clearInterval(this.cdmTimer)\n  }\n  render() { \n    const { elapsedTime, isRunning, totalSeconds, totalMinutes } = this.state\n    let minutes = Math.floor(elapsedTime / 60)\n    let seconds = elapsedTime - (minutes * 60)\n\n    return(\n      <div className='ct-stopwatch flex row space-between' >\n        <div>{minutes}:{seconds<10 ? '0'+seconds : seconds}</div>\n        <div>\n          {!isRunning && <button onClick={this.startCounting}>Start</button>}\n          {isRunning && <button onClick={this.pauseCounting}>Pause</button>}\n        </div>\n        <div>{totalMinutes}:{totalSeconds < 10 ? '0' + totalSeconds : totalSeconds}</div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { ThemeConsumer } from '../contexts/theme'\nimport Nav from './Nav'\nimport Timer from './Timer'\nimport queryString from 'query-string'\nimport '../styles/activeRecipe.scss'\n\nexport default class ActiveRecipe extends React.Component { \n  state = {\n    vessel: null,\n    minutes: null,\n    seconds: null,\n    coffeeWeight: null,\n    waterWeight: null,\n  }\n  componentDidMount(){ \n     //set state by query string\n    const { vessel, minutes, seconds, coffeeWeight, waterWeight } = queryString.parse(this.props.location.search)\n    this.setState({\n      vessel,\n      minutes: parseInt(minutes),\n      seconds: parseInt(seconds),\n      coffeeWeight,\n      waterWeight\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n   \n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  render() { \n    const { vessel, minutes, seconds, coffeeWeight, waterWeight } = this.state \n\n    return (\n      <ThemeConsumer>\n        {()=>(\n          <div className='flex-center column'>\n            <Nav />\n            <h1>Using Recipe</h1>\n            <div className='flex-center row columns flex-auto max-height full-width'>\n              <div className='left column flex'>\n                <h4>Coffee:</h4>\n                <h3>{ coffeeWeight } g</h3>\n                <h4>Water:</h4>\n                <h3>{waterWeight} g</h3>\n              </div>\n              <div className='center column flex-end'>\n                <Timer minutes={minutes} seconds={seconds} />\n              </div>\n              <div className='right column flex-center'>\n                <h3 className='vessel-name rotate-ninety uppercase'>{ vessel ? vessel : 'vessel'}</h3>\n              </div>\n            </div>\n          </div>\n          )}\n        </ThemeConsumer>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from './contexts/theme'\nimport Home from './components/Home'\nimport AddRecipe from './components/AddRecipe'\nimport ActiveRecipe from './components/ActiveRecipe'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\nclass App extends React.Component { \n  state = {\n      theme: 'dark',\n      toggleTheme: () => { \n        this.setState(({ theme }) => ({\n          theme: theme === 'light'? 'dark' : 'light'\n        }))\n      }\n    }\n  render() { \n    return (\n      <Router>\n        <ThemeProvider value={this.state}>\n          <div className={ `flex max-height flex-start column ${this.state.theme}` }>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/recipe/add\" component={AddRecipe} />\n              <Route path=\"/recipe/active\" component={ActiveRecipe} />\n            </Switch>\n          </div>\n        </ThemeProvider>\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}